/*

## Jenkins management
- Make sure jenkins has git plugin configured or is able to use git from system
- Add public SSH key that will be used by kops for VM access using jenkins plugin "Config File Management". This file name will be referred by input parameter SSH_PUBLIC_KEY_FILE_ID
- setup kubectl using "Custom tool" as part of "Global Tool Configuration"
- setup kops using "Custom tool" as part of "Global Tool Configuration"
- setup terraform using "Custom tool" as part of "Global Tool Configuration"
- setup AWS CLI using "Custom tool" as part of "Global Tool Configuration"

## environment variables expected with sample values
KOPS_STATE_STORE=s3://mykops
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

## input parameters expected
CLUSTER_NAME=kopsdemo.k8s.local
BUCKET_NAME=mykops
BUCKET_REGION=us-east-1
REPO_URL=https://github.com/user/reponame.git
REPO_BRANCH=main
SSH_PUBLIC_KEY_FILE_ID=autogenerated_by_jenkins a23adf2-af23s-sf or provided by user at time of creation e.g. - id_rsa.pub
*/


pipeline {
    agent any
    options {
        ansiColor('xterm')
    }
    parameters {
        string(name: 'CLUSTER_NAME', defaultValue: 'kopsdemo.k8s.local', description: '')
        string(name: 'BUCKET_NAME', defaultValue: 'vj-1111-vj-kops', description: '')
        string(name: 'BUCKET_REGION', defaultValue: 'us-east-1', description: '')
        string(name: 'REPO_URL', defaultValue: 'https://github.com/eshop-micro-demo/infra.git', description: '')
        string(name: 'REPO_BRANCH', defaultValue: 'main', description: '')
        string(name: 'SSH_PUBLIC_KEY_FILE_ID', defaultValue: 'fb5d37dd-8fb2-42fd-8e19-85689077fc37', description: '')
    }
    environment {
        TERRAFORM_HOME = tool name: 'Terraform', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        KOPS_HOME = tool name: 'kops', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        KUBECTL_HOME = tool name: 'kubectl', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        // AWS_CLI_HOME = tool name: 'aws-cli', type:'com.cloudbees.jenkins.plugins.customtools.CustomTool'
    }
    stages {
        // stage('CREATE_S3_BUCKET') {
        //     steps {
        //           sh """#! /bin/bash
        //               set -x
        //               export PATH=$PATH:$AWS_CLI_HOME
        //               aws s3api create-bucket --bucket ${params.BUCKET_NAME} --region ${params.BUCKET_REGION} --no-cli-pager
        //               aws s3api put-bucket-versioning --bucket ${params.BUCKET_NAME} --versioning-configuration Status=Enabled --no-cli-pager 
        //             """
        //     }
        // }
        stage('KOPS_Install') {
            steps {
                git branch: "${params.REPO_BRANCH}", url:"${params.REPO_URL}"

                // print (env.KOPS_HOME)
                configFileProvider([configFile(fileId: "${params.SSH_PUBLIC_KEY_FILE_ID}", variable: 'ssh_pub_key')]) {
                    sh """#! /bin/bash
                       set -x
                       export PATH=$PATH:$KOPS_HOME
                       export KOPS_STATE_STORE=s3://${params.BUCKET_NAME}
                       #which kops
                       #ls -latr
    
                       echo kops name  ${params.CLUSTER_NAME}
                       # To make it run again and again...
                       kops replace --force -f kops/cluster.yaml
                       kops create secret --name ${params.CLUSTER_NAME} sshpublickey admin -i $ssh_pub_key
                       kops update cluster ${params.CLUSTER_NAME} --yes --admin
                       kops validate cluster ${params.CLUSTER_NAME} --wait 10m
                       
                       kops rolling-update cluster --yes --cloudonly
                    """

                }
            }
        }
        stage('cloud_native_install') {
            steps {
                sh """#!/bin/sh
                    
                    set -x
                    
                    #pwd
                    export PATH=$PATH:$KOPS_HOME:$TERRAFORM_HOME:$KUBECTL_HOME
                    export KOPS_STATE_STORE=s3://${params.BUCKET_NAME}
                    # ls -ltra
                    #echo $PATH
                    #which terraform
                    #which kubectl
                    #which kops
                    
                    kops export kubecfg ${params.CLUSTER_NAME} --kubeconfig ./kops_kubeconfig --admin
                    
                    KUBECONFIG=./kops_kubeconfig kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.4.0-beta.0/cert-manager.crds.yaml
                    KUBECONFIG=./kops_kubeconfig kubectl apply -f https://github.com/prometheus-operator/prometheus-operator/tree/master/example/prometheus-operator-crd
                    export KUBE_CONFIG_PATH=../kops_kubeconfig
                    cd terraform
                    terraform init
                    #terraform plan
                    terraform apply -auto-approve
                    cd ..
                    
                    KUBECONFIG=./kops_kubeconfig kubectl apply -f k8s/
                """
            }
        }
    }
}
